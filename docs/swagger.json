{
  "openapi": "3.0.0",
  "info": {
    "title": "Binar Car Rental (BCR) API Documentation",
    "version": "1.0.0",
    "description": "API documentation for Binar Car Rental (BCR) application."
  },
  "servers": [
    {
      "url": "{{base_url}}",
      "description": "Base URL for the API"
    }
  ],
  "paths": {
    "/auths/login": {
      "post": {
        "summary": "Login",
        "description": "Authenticate user with email and password.",
        "tags": ["Auths"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "example": "membertony@mail.com" },
                  "password": { "type": "string", "example": "punyasiapa" }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "Succeed" },
                    "message": { "type": "string", "example": "Login successful" },
                    "isSuccess": { "type": "boolean", "example": true },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "id": { "type": "integer", "example": 1 },
                            "name": { "type": "string", "example": "Muhammad Rafif Ramadhansyah" },
                            "email": { "type": "string", "example": "rafif@mail.com" },
                            "role": { "type": "string", "example": "superadmin" }
                          }
                        },
                        "token": { "type": "string", "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..." }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing fields",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "Failed" },
                    "message": { "type": "string", "example": "Email and password are required" },
                    "isSuccess": { "type": "boolean", "example": false },
                    "data": { "type": "null" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "Failed" },
                    "message": { "type": "string", "example": "User not found" },
                    "isSuccess": { "type": "boolean", "example": false },
                    "data": { "type": "null" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auths/register": {
      "post": {
        "summary": "Register",
        "description": "Register a new user with email, password, name, address, and phone number.",
        "tags": ["Auths"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "example": "farrelkeriting@mail.com" },
                  "password": { "type": "string", "example": "farrelkeriting123" },
                  "name": { "type": "string", "example": "Farrel" },
                  "address": { "type": "string", "example": "Borneo" },
                  "phoneNumber": { "type": "integer", "example": 1234567890 }
                },
                "required": ["email", "password", "name"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "Succeed" },
                    "message": { "type": "string", "example": "Member registered successfully" },
                    "isSuccess": { "type": "boolean", "example": true },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "id": { "type": "integer", "example": 13 },
                            "name": { "type": "string", "example": "Farrel" },
                            "email": { "type": "string", "example": "farrelkeriting@mail.com" },
                            "role": { "type": "string", "example": "member" },
                            "createdAt": { "type": "string", "example": "2024-11-02T04:56:44.422Z" }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Email already in use",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "Failed" },
                    "message": { "type": "string", "example": "Email is already in use" },
                    "isSuccess": { "type": "boolean", "example": false },
                    "data": { "type": "null" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auths/add-admin": {
      "post": {
        "summary": "Add Admin",
        "description": "Add a new admin account. Requires an authorization token.",
        "tags": ["Auths"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "example": "antonygasing@mail.com" },
                  "password": { "type": "string", "example": "kelok100juta" },
                  "name": { "type": "string", "example": "Antony" },
                  "address": { "type": "string", "example": "Manchester" },
                  "phoneNumber": { "type": "integer", "example": 1234554321 }
                },
                "required": ["email", "password", "name"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Admin created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "Succeed" },
                    "message": { "type": "string", "example": "Admin added successfully" },
                    "isSuccess": { "type": "boolean", "example": true },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "id": { "type": "integer", "example": 12 },
                            "name": { "type": "string", "example": "Antony" },
                            "email": { "type": "string", "example": "antonygasing@mail.com" },
                            "role": { "type": "string", "example": "admin" },
                            "createdAt": { "type": "string", "example": "2024-11-02T04:55:32.030Z" }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Email already in use",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "Failed" },
                    "message": { "type": "string", "example": "Email is already in use" },
                    "isSuccess": { "type": "boolean", "example": false },
                    "data": { "type": "null" }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient privileges",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "Failed" },
                    "message": { "type": "string", "example": "Access denied. Insufficient privileges." },
                    "isSuccess": { "type": "boolean", "example": false },
                    "data": { "type": "null" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cars": {
      "get": {
        "summary": "Get All Cars",
        "description": "Retrieve a list of all available cars.",
        "tags": ["Cars"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": { "type": "string" },
            "example": "Bearer {{token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - List of cars",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "Succeed" },
                    "message": { "type": "string", "example": "Success to get all car data" },
                    "isSuccess": { "type": "boolean", "example": true },
                    "data": {
                      "type": "object",
                      "properties": {
                        "cars": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": { "type": "integer", "example": 1 },
                              "brand": { "type": "string", "example": "Mercedes Benz" },
                              "model": { "type": "string", "example": "Grand Cherokee" },
                              "year": { "type": "integer", "example": 2024 },
                              "plateNumber": { "type": "string", "example": "CR54QBO" },
                              "price": { "type": "integer", "example": 41281 }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - No token provided",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "Failed" },
                    "message": { "type": "string", "example": "Access denied. No token provided." },
                    "isSuccess": { "type": "boolean", "example": false },
                    "data": { "type": "null" }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Car",
        "description": "Create a new car entry.",
        "tags": ["Cars"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": { "type": "string" },
            "example": "Bearer {{token}}"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "brand": { "type": "string", "example": "Tesla" },
                  "model": { "type": "string", "example": "Model 3" },
                  "year": { "type": "integer", "example": 2023 },
                  "plateNumber": { "type": "string", "example": "ABC123" },
                  "price": { "type": "integer", "example": 50000 },
                  "carImage": { "type": "string", "format": "binary" }
                },
                "required": ["brand", "model", "year", "plateNumber", "price", "carImage"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Car created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "Succeed" },
                    "message": { "type": "string", "example": "Car created successfully" },
                    "isSuccess": { "type": "boolean", "example": true },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer", "example": 51 },
                        "brand": { "type": "string", "example": "Tesla" },
                        "model": { "type": "string", "example": "Model 3" },
                        "year": { "type": "integer", "example": 2023 },
                        "plateNumber": { "type": "string", "example": "ABC123" },
                        "price": { "type": "integer", "example": 50000 }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cars/{id}": {
      "get": {
        "summary": "Get Car by ID",
        "description": "Retrieve a specific car by its ID.",
        "tags": ["Cars"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" },
            "example": 2
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": { "type": "string" },
            "example": "Bearer {{token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Car found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "Succeed" },
                    "message": { "type": "string", "example": "Success to get car data by id" },
                    "isSuccess": { "type": "boolean", "example": true },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer", "example": 2 },
                        "brand": { "type": "string", "example": "MG" },
                        "model": { "type": "string", "example": "XC90" },
                        "year": { "type": "integer", "example": 2024 },
                        "plateNumber": { "type": "string", "example": "ZI77BOX" },
                        "price": { "type": "integer", "example": 31684 }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Car not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "Failed" },
                    "message": { "type": "string", "example": "Car data not found" },
                    "isSuccess": { "type": "boolean", "example": false },
                    "data": { "type": "null" }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Car",
        "description": "Update details of a specific car by ID.",
        "tags": ["Cars"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" },
            "example": 2
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": { "type": "string" },
            "example": "Bearer {{token}}"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "brand": { "type": "string", "example": "Toyota" },
                  "model": { "type": "string", "example": "Corolla" },
                  "year": { "type": "integer", "example": 2022 },
                  "plateNumber": { "type": "string", "example": "XYZ123" },
                  "price": { "type": "integer", "example": 25000 }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Car updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "Succeed" },
                    "message": { "type": "string", "example": "Car updated successfully" },
                    "isSuccess": { "type": "boolean", "example": true },
                    "data": { "type": "null" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Car not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "Failed" },
                    "message": { "type": "string", "example": "Car data not found" },
                    "isSuccess": { "type": "boolean", "example": false },
                    "data": { "type": "null" }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Car",
        "description": "Delete a specific car by ID.",
        "tags": ["Cars"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" },
            "example": 2
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": { "type": "string" },
            "example": "Bearer {{token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Car deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "Succeed" },
                    "message": { "type": "string", "example": "Car deleted successfully" },
                    "isSuccess": { "type": "boolean", "example": true },
                    "data": { "type": "null" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Car not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "Failed" },
                    "message": { "type": "string", "example": "Car data not found" },
                    "isSuccess": { "type": "boolean", "example": false },
                    "data": { "type": "null" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get All Users",
        "description": "Retrieve a list of all users.",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": { "type": "string" },
            "example": "Bearer {{token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "Succeed" },
                    "message": { "type": "string", "example": "Success to get all users data" },
                    "isSuccess": { "type": "boolean", "example": true },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "integer", "example": 1 },
                          "name": { "type": "string", "example": "Muhammad Rafif Ramadhansyah" },
                          "email": { "type": "string", "example": "rafif@mail.com" },
                          "role": { "type": "string", "example": "superadmin" }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - No token provided",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "Failed" },
                    "message": { "type": "string", "example": "Access denied. No token provided." },
                    "isSuccess": { "type": "boolean", "example": false },
                    "data": { "type": "null" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get User by ID",
        "description": "Retrieve a specific user by their ID.",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" },
            "example": 1
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": { "type": "string" },
            "example": "Bearer {{token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "Succeed" },
                    "message": { "type": "string", "example": "Success to get user data by id" },
                    "isSuccess": { "type": "boolean", "example": true },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer", "example": 1 },
                        "name": { "type": "string", "example": "Muhammad Rafif Ramadhansyah" },
                        "email": { "type": "string", "example": "rafif@mail.com" },
                        "role": { "type": "string", "example": "superadmin" }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "Failed" },
                    "message": { "type": "string", "example": "User data not found" },
                    "isSuccess": { "type": "boolean", "example": false },
                    "data": { "type": "null" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - No token provided",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "Failed" },
                    "message": { "type": "string", "example": "Access denied. No token provided." },
                    "isSuccess": { "type": "boolean", "example": false },
                    "data": { "type": "null" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/health-check": {
      "get": {
        "summary": "Health Check",
        "description": "Check if the application is running and healthy.",
        "tags": ["Default"],
        "responses": {
          "200": {
            "description": "Application is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "Success" },
                    "message": { "type": "string", "example": "Application passed health check" },
                    "isSuccess": { "type": "boolean", "example": true },
                    "data": { "type": "null" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "API Not Found",
        "description": "Default response for an undefined route.",
        "tags": ["Default"],
        "responses": {
          "404": {
            "description": "API not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "Failed" },
                    "message": { "type": "string", "example": "API not found" },
                    "isSuccess": { "type": "boolean", "example": false },
                    "data": { "type": "null" }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
